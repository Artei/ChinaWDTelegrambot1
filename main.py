import asyncio
import logging
import os

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command, CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, BotCommand
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from core.config import settings
from core.settings_manager import load_settings, save_settings
from bot_handlers import calculator, faq, admin, request
import keyboards as kb
from core.currency_updater import fetch_currency_rates


async def update_and_save_rates():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç."""
    logging.info("–ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç...")
    cny_rate, eur_rate = await fetch_currency_rates()

    if cny_rate and eur_rate:
        settings.rates.cny_to_rub = cny_rate
        settings.rates.eur_to_rub = eur_rate
        save_settings()
        logging.info(f"–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: CNY={cny_rate}, EUR={eur_rate}")
    else:
        logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    # --- –ó–ê–ì–†–£–ó–ö–ê –ù–ê–°–¢–†–û–ï–ö –ü–†–ò –°–¢–ê–†–¢–ï ---
    load_settings()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(name)s - %(message)s",
    )
    
    # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    await update_and_save_rates()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
    scheduler.add_job(update_and_save_rates, 'cron', hour=11, minute=30)
    scheduler.start()

    if not settings.bot.token:
        logging.critical("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN.")
        return

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=settings.bot.token)
    dp = Dispatcher()

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ú–µ–Ω—é"
    main_menu_commands = [
        BotCommand(command='/start', description='‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å/–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
        BotCommand(command='/admin', description='–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    ]
    await bot.set_my_commands(main_menu_commands)

    # --- –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ---
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤
    dp.include_router(admin.router) # –ê–¥–º–∏–Ω-—Ä–æ—É—Ç–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º, —á—Ç–æ–±—ã –µ–≥–æ —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–æ–≤–µ—Ä—è–ª–∏—Å—å —Ä–∞–Ω—å—à–µ
    # –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ admin.router, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—Ç—å –µ–≥–æ —Ñ–∏–ª—å—Ç—Ä—ã
    @dp.message(Command("admin"))
    async def admin_panel_command(message: types.Message):
        if message.from_user.id in settings.bot.admin_ids:
            await admin.show_admin_menu(message)
        else:
            await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            
    dp.include_router(calculator.router)
    dp.include_router(faq.router)
    dp.include_router(request.router)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    @dp.message(CommandStart())
    async def send_welcome(message: types.Message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π."""
        user_id = message.from_user.id
        
        welcome_text = (
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}!\n\n"
            "–Ø –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∑–∞–∫–∞–∑—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–∑ –ö–∏—Ç–∞—è. –ß—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å:\n\n"
            "üîπ **–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:** –ï—Å—Ç—å —Ü–µ–Ω–∞ –∞–≤—Ç–æ –≤ —é–∞–Ω—è—Ö? –î–∞–≤–∞–π—Ç–µ –ø–æ—Å—á–∏—Ç–∞–µ–º –∫–æ–Ω–µ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –†–§ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Å–±–æ—Ä–æ–≤ –∏ –∫–æ–º–∏—Å—Å–∏–π.\n\n"
            "üîπ **–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:** –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º, –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑? –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É.\n\n"
            "üîπ **–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã (FAQ):** –£–∑–Ω–∞–π—Ç–µ –≤—Å—ë –æ —Å—Ä–æ–∫–∞—Ö –¥–æ—Å—Ç–∞–≤–∫–∏, —Å–ø–æ—Å–æ–±–∞—Ö –æ–ø–ª–∞—Ç—ã –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è—Ö.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá"
        )

        if user_id in settings.bot.admin_ids:
            welcome_text += "\n\n*–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.*"
        
        keyboard = kb.get_main_inline_keyboard(user_id in settings.bot.admin_ids)
        await message.answer(welcome_text, parse_mode="Markdown", reply_markup=keyboard)

    # ------------------------------------

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        logging.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        await dp.start_polling(bot)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()


if __name__ == "__main__":
    # –ù–∞ Replit, –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã, –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ–±-—Ö—É–∫–∏ –∏–ª–∏ keep-alive.
    # –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")