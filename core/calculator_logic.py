import datetime
from dataclasses import dataclass, field
from .config import Settings

@dataclass
class CustomsResult:
    """–•—Ä–∞–Ω–∏—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π."""
    duty_rub: float = 0.0
    customs_fee_rub: float = 0.0
    recycling_fee_rub: float = 0.0
    total_customs_rub: float = 0.0

@dataclass
class CalculationResult:
    """–•—Ä–∞–Ω–∏—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞."""
    car_price_rub: float = 0.0
    bank_commission_rub: float = 0.0
    company_commission_rub: float = 0.0
    china_expenses_rub: float = 0.0
    customs: CustomsResult = field(default_factory=CustomsResult)
    total_cost_rub: float = 0.0
    # ... –∑–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ–ª—è –¥–ª—è —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π

def _calculate_customs_for_individual(user_data: dict, settings: Settings) -> CustomsResult:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
    –í–ù–ò–ú–ê–ù–ò–ï: –°—Ç–∞–≤–∫–∏ —è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –∏ –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –≤ –∫–æ–Ω—Ñ–∏–≥–µ!
    """
    customs_result = CustomsResult()
    current_year = datetime.datetime.now().year
    car_age = current_year - user_data['year']
    engine_volume = user_data['engine_volume']
    engine_power = user_data.get('engine_power', 0)
    car_price_eur = (user_data['car_price_cny'] * settings.rates.cny_to_rub) / settings.rates.eur_to_rub

    # --- 1. –†–∞—Å—á–µ—Ç –ø–æ—à–ª–∏–Ω—ã ---
    duty_eur = 0.0
    duty_rate_map = {}
    if car_age < 3:
        # –î–ª—è –∞–≤—Ç–æ –¥–æ 3 –ª–µ—Ç: % –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ ‚Ç¨/—Å–º3
        # TODO: –í—ã–Ω–µ—Å—Ç–∏ 0.48 –∏ 2.5 –≤ –∫–æ–Ω—Ñ–∏–≥
        duty_from_price = car_price_eur * 0.48
        duty_from_volume = 2.5 * engine_volume
        duty_eur = max(duty_from_price, duty_from_volume)
    else:
        if 3 <= car_age <= 5:
            duty_rate_map = settings.customs.duty.age_3_5_years
        else: # –°—Ç–∞—Ä—à–µ 5 –ª–µ—Ç
            duty_rate_map = settings.customs.duty.age_older_5_years
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç–∞–≤–∫—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á (max_volume) –≤ int –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        for max_volume_str, rate in sorted(duty_rate_map.items(), key=lambda item: int(item[0])):
            if engine_volume <= int(max_volume_str):
                duty_eur = rate * engine_volume
                break
    
    customs_result.duty_rub = duty_eur * settings.rates.eur_to_rub

    # --- 2. –¢–∞–º–æ–∂–µ–Ω–Ω—ã–π —Å–±–æ—Ä ---
    customs_result.customs_fee_rub = settings.customs.base_customs_fee_rub
    
    # --- 3. –£—Ç–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–±–æ—Ä (–±–∞–∑–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏ –¥–ª—è —Ñ–∏–∑–ª–∏—Ü) ---
    if car_age <= 3:
        customs_result.recycling_fee_rub = settings.customs.recycling.under_3_years
    else:
        customs_result.recycling_fee_rub = settings.customs.recycling.over_3_years
        
    # --- 4. –ò—Ç–æ–≥–æ —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ ---
    customs_result.total_customs_rub = (
        customs_result.duty_rub +
        customs_result.customs_fee_rub +
        customs_result.recycling_fee_rub
    )
    
    return customs_result

def calculate_total_cost(user_data: dict, settings: Settings) -> CalculationResult:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
    
    :param user_data: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏, —Å–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param settings: –û–±—ä–µ–∫—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (–∫—É—Ä—Å—ã, –∫–æ–º–∏—Å—Å–∏–∏).
    :return: –û–±—ä–µ–∫—Ç —Å –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞—Å—á–µ—Ç–∞.
    """
    result = CalculationResult()
    
    # 1. –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ –≤ —Ä—É–±–ª—è—Ö
    result.car_price_rub = user_data['car_price_cny'] * settings.rates.cny_to_rub
    
    # 2. –ö–æ–º–∏—Å—Å–∏—è –±–∞–Ω–∫–∞
    result.bank_commission_rub = result.car_price_rub * settings.fees.bank_commission_percent
    
    # 3. –ö–æ–º–∏—Å—Å–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ (—Ç–µ–ø–µ—Ä—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
    result.company_commission_rub = settings.fees.company_commission_rub
    
    # 4. –†–∞—Å—Ö–æ–¥—ã –≤ –ö–∏—Ç–∞–µ (—Ç–µ–ø–µ—Ä—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
    result.china_expenses_rub = settings.fees.china_expenses_rub
    
    # 5. –†–∞—Å—á–µ—Ç —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
    if user_data['payer_type'] == '–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ':
        result.customs = _calculate_customs_for_individual(user_data, settings)
    else:
        # TODO: –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü
        pass

    # 6. –†–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã
    result.total_cost_rub = (
        result.car_price_rub +
        result.bank_commission_rub +
        result.company_commission_rub +
        result.china_expenses_rub +
        result.customs.total_customs_rub # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–º–æ–∂–Ω—é
    )
    
    return result

def format_result_for_user(result: CalculationResult) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –≤ –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    
    def format_rub(value: float) -> str:
        """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª —Å –ø—Ä–æ–±–µ–ª–æ–º –∏ –∑–Ω–∞–∫–æ–º —Ä—É–±–ª—è."""
        return f"{value:,.0f}".replace(',', ' ')

    customs_details = (
        f"‚Äî –¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞: {format_rub(result.customs.duty_rub)} ‚ÇΩ\n"
        f"‚Äî –¢–∞–º–æ–∂–µ–Ω–Ω—ã–π —Å–±–æ—Ä: {format_rub(result.customs.customs_fee_rub)} ‚ÇΩ\n"
        f"‚Äî –£—Ç–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–±–æ—Ä: {format_rub(result.customs.recycling_fee_rub)} ‚ÇΩ\n"
        f"<b>–ò—Ç–æ–≥–æ —Ç–∞–º–æ–∂–Ω—è:</b> {format_rub(result.customs.total_customs_rub)} ‚ÇΩ"
    )

    text = (
        "‚úÖ –†–∞—Å—á–µ—Ç –≥–æ—Ç–æ–≤!\n\n"
        "<b>–ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∏–Ω–≤–æ–π—Å—É:</b>\n"
        f"‚Äî –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ: {format_rub(result.car_price_rub)} ‚ÇΩ\n"
        f"‚Äî –ö–æ–º–∏—Å—Å–∏—è –±–∞–Ω–∫–∞: {format_rub(result.bank_commission_rub)} ‚ÇΩ\n"
        f"‚Äî –ö–æ–º–∏—Å—Å–∏—è –∫–æ–º–ø–∞–Ω–∏–∏: {format_rub(result.company_commission_rub)} ‚ÇΩ\n"
        f"‚Äî –†–∞—Å—Ö–æ–¥—ã –≤ –ö–∏—Ç–∞–µ: {format_rub(result.china_expenses_rub)} ‚ÇΩ\n\n"
        "<b>–¢–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏:</b>\n"
        f"{customs_details}\n\n"
        f"<b>–ò–¢–û–ì–û–í–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨:</b> {format_rub(result.total_cost_rub)} ‚ÇΩ\n\n"
        "üöß <i>–†–∞—Å—á–µ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ü–µ–Ω–∞—Ö, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ–± –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –Ω–∞ –¥–µ–Ω—å –ø–æ–∫—É–ø–∫–∏. "
        "–£—Ç–æ—á–Ω–∏—Ç—å —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –º–æ–∂–µ—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ <a href=\"https://www.tks.ru/auto/calc/\">tks.ru</a></i>"
    )
    return text