from aiogram import Router, F, types
from aiogram.filters import Filter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message

from core.config import settings
from core.settings_manager import save_settings

class AdminFilter(Filter):
    """–§–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    async def __call__(self, event: types.TelegramObject, *args, **kwargs) -> bool:
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–ª—è Message, –∏ –¥–ª—è CallbackQuery
        user = event.from_user
        return user.id in settings.bot.admin_ids

router = Router()
# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∫–æ –≤—Å–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ
router.message.filter(AdminFilter())
router.callback_query.filter(AdminFilter())


# --- FSM –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ ---
class AdminStates(StatesGroup):
    waiting_for_cny_rate = State()
    waiting_for_eur_rate = State()
    # TODO: –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–æ–º–∏—Å—Å–∏–π –∏ –ø—Ä–æ—á–∏—Ö —Å–±–æ—Ä–æ–≤


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ ---

def get_admin_main_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    buttons = [
        [InlineKeyboardButton(text="üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º", callback_data="admin_calculator_menu")],
        [InlineKeyboardButton(text="üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ FAQ", callback_data="admin_faq_menu")],
        # [InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∏", callback_data="admin_broadcast_menu")],
        # [InlineKeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data="admin_users_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_calculator_settings_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞."""
    buttons = [
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data="admin_set_rates")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∏—Å—Å–∏–∏ –∏ —Å–±–æ—Ä—ã", callback_data="admin_set_fees")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é", callback_data="admin_main_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_admin_cancel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö FSM (–∏–Ω–ª–∞–π–Ω)."""
    buttons = [
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_cancel_action")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def _get_calculator_settings_text() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞."""
    return (
        f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞</b>\n\n"
        f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: `1 ¬• = {settings.rates.cny_to_rub} ‚ÇΩ`\n"
        f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: `1 ‚Ç¨ = {settings.rates.eur_to_rub} ‚ÇΩ`\n\n"
        f"–ö–æ–º–∏—Å—Å–∏—è –±–∞–Ω–∫–∞: `{settings.fees.bank_commission_rub}`\n"
        f"–ö–æ–º–∏—Å—Å–∏—è –∫–æ–º–ø–∞–Ω–∏–∏: `{settings.fees.company_commission_rub}`\n"
        f"–†–∞—Å—Ö–æ–¥—ã –≤ –ö–∏—Ç–∞–µ: `{settings.fees.china_expenses_cny} ¬•`\n"
        f"–¢–∞–º–æ–∂–µ–Ω–Ω—ã–π —Å–±–æ—Ä: `{settings.fees.customs_fee_rub} ‚ÇΩ`\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:"
    ).replace(",", " ")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ ---

@router.message(F.text == "üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
@router.callback_query(F.data == "main_menu:admin")
async def show_admin_menu(message: types.Message | types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    if isinstance(message, types.CallbackQuery):
        msg = message.message
        await message.answer()
    else:
        msg = message
    await msg.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", reply_markup=get_admin_main_keyboard())

@router.callback_query(F.data == "admin_main_menu")
async def back_to_admin_menu(callback: types.CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏."""
    await callback.message.edit_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", reply_markup=get_admin_main_keyboard())
    await callback.answer()

@router.callback_query(F.data == "admin_calculator_menu")
async def show_calculator_settings(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏."""
    text = _get_calculator_settings_text()
    await callback.message.edit_text(
        text,
        reply_markup=get_calculator_settings_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "admin_cancel_action")
async def cancel_admin_action(callback: types.CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω—è–µ—Ç FSM –≤ –∞–¥–º–∏–Ω–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞."""
    await state.clear()
    await callback.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    text = _get_calculator_settings_text()
    await callback.message.edit_text(
        text,
        reply_markup=get_calculator_settings_keyboard(),
        parse_mode="HTML"
    )

# --- –õ–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç ---

@router.callback_query(F.data == "admin_set_rates")
async def start_setting_rates(callback: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç."""
    await state.clear()
    await callback.message.edit_text(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å —é–∞–Ω—è –∫ —Ä—É–±–ª—é...",
        reply_markup=get_admin_cancel_keyboard()
    )
    await state.set_state(AdminStates.waiting_for_cny_rate)
    await callback.answer()

@router.message(AdminStates.waiting_for_cny_rate)
async def process_cny_rate(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –∫—É—Ä—Å —é–∞–Ω—è –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫—É—Ä—Å –µ–≤—Ä–æ."""
    try:
        new_rate = float(message.text.replace(',', '.').strip())
        if new_rate <= 0:
            raise ValueError("–ö—É—Ä—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.")
        await state.update_data(cny_rate=new_rate)
        await message.answer(
            "–ö—É—Ä—Å —é–∞–Ω—è –ø—Ä–∏–Ω—è—Ç. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å –µ–≤—Ä–æ –∫ —Ä—É–±–ª—é...",
            reply_markup=get_admin_cancel_keyboard()
        )
        await state.set_state(AdminStates.waiting_for_eur_rate)
    except (ValueError, TypeError):
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `12.5`).",
            reply_markup=get_admin_cancel_keyboard()
        )

@router.message(AdminStates.waiting_for_eur_rate)
async def process_eur_rate_and_save(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –∫—É—Ä—Å –µ–≤—Ä–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    try:
        new_eur_rate = float(message.text.replace(',', '.').strip())
        if new_eur_rate <= 0:
            raise ValueError("–ö—É—Ä—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.")

        data = await state.get_data()
        new_cny_rate = data.get('cny_rate')

        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ø–∞–º—è—Ç–∏
        settings.rates.cny_to_rub = new_cny_rate
        settings.rates.eur_to_rub = new_eur_rate
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª
        save_settings()

        await state.clear()
        
        await message.answer("‚úÖ <b>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!</b>", parse_mode="HTML")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
        text = _get_calculator_settings_text()
        await message.answer(
            text,
            reply_markup=get_calculator_settings_keyboard(),
            parse_mode="HTML"
        )

    except (ValueError, TypeError):
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `100.0`).",
            reply_markup=get_admin_cancel_keyboard()
        )

# TODO: –î–æ–±–∞–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π –∏ —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤. 